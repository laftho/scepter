<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include("../partials/header", { title: "Scepter" }); %>
  </head>
  <body>

    <%- include("../partials/nav", { selected: "index" }); %>

    <script>

      function hashcode(str) {
          let hash = 0, i, chr;
          if (str.length === 0) return hash;

          for (i = 0; i < str.length; i++) {
            chr   = str.charCodeAt(i);
            hash  = ((hash << 5) - hash) + chr;
            hash |= 0; // Convert to 32bit integer
          }

          return hash;
      }

      function rulehash(rule) {
          return hashcode(`${rule.before ? "before":""}${rule.after ? "after" : ""}-${rule.pattern}-${rule.code}`);
      }

      function addRule() {
          let rules = Array.from(models.rules.value);

          let rule = {
              id: rules.length,
              pattern: $("#rule-pattern").val(),
              code: $("#rule-code").val()
          };

          rule[$("input[type=radio][name=rules-event-order]:checked").val()] = true;

          rules.push(rule);

          models.rules.value = rules;

          //$("#rule-pattern").clear();
          //$("#rule-code").clear();
      }

      function deleteRule(id) {
          let rules = Array.from(models.rules.value);

          rules.splice(rules.findIndex((val) => val.id === id), 1);

          models.rules.value = rules;
      }

      function saveLocal(el, id) {
          if (typeof(Storage) === "undefined") {
              alert("no local storage? wtf");
              return;
          }

          let rules = (localStorage.rules) ? JSON.parse(localStorage.rules) : {};

          let rule = models.rules.value.find((val) => val.id === id);

          let hash = rulehash(rule);

          if (el.className.includes("btn-default")) {
              if(!rules[hash]) rules[hash] = rule;
              el.className = el.className.replace("btn-default", "btn-warning");
          } else {
              if (rules[hash]) delete rules[hash];
              el.className = el.className.replace("btn-warning", "btn-default");
          }

          localStorage.rules = JSON.stringify(rules);
          models.localRuleCount.load();
      }

      function restoreLocals() {
          if (typeof(Storage) === "undefined") {
              return;
          }

          if (!localStorage.rules) return;

          let localRules = JSON.parse(localStorage.rules);

          let rules = Array.from(models.rules.value);

          rules.forEach((rule) => {
              let hash = rulehash(rule);
              if (localRules[hash]) {
                  delete localRules[hash];
              }
          });

          for(let hash in localRules) {
              if (!localRules.hasOwnProperty(hash)) continue;

              let rule = localRules[hash];

              rules.push({
                  id: rules.length,
                  pattern: rule.pattern,
                  code: rule.code,
                  before: rule.before,
                  after: rule.after
              });
          }

          models.rules.value = rules;
      }
    </script>

    <div class="container-fluid">
      <div class="panel panel-default">
        <div class="panel-heading">
          <h3 class="panel-title">
            <a role="button" data-toggle="collapse" href="#rulesBody" aria-expanded="false" aria-controls="rulesBody">
            Rules <span class="badge" data-model="ruleCount">0</span>
            </a>
          </h3>
        </div>
        <div class="panel-body collapse" id="rulesBody">
          <div class="row">
            <div class="col-lg-7">
              <ul class="list-group" data-model="rules"></ul>
            </div>
            <div class="col-lg-5">
              <div class="panel panel-default">
                <div class="panel-heading">
                  <h3 class="panel-title">Add Rule</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                      <label class="col-sm-2" for="rule-pattern">Rule Pattern</label>
                      <div class="col-sm-10">
                        <input type="text" class="form-control" placeholder="Pattern" id="rule-pattern" name="rule-pattern">
                      </div>
                    </div>

                    <div class="form-group">
                      <label class="col-sm-2" for="rule-code">Rule Code</label>
                      <div class="col-sm-10">
                        <textarea class="form-control" placeholder="Code" id="rule-code" name="rule-code"></textarea>
                      </div>
                    </div>

                    <div class="form-group">
                      <label class="col-sm-2" for="rules-event-order">
                        Remote request
                      </label>

                      <div class="col-sm-10">
                        <div class="radio">
                          <label>
                            <input type="radio" name="rules-event-order" id="rule-before" value="before" checked>
                            Before
                          </label>
                        </div>
                        <div class="radio">
                          <label>
                            <input type="radio" name="rules-event-order" id="rule-after" value="after">
                            After
                          </label>
                        </div>
                      </div>
                    </div>

                    <div class="form-group">
                      <div class="col-sm-offset-2 col-sm-8">
                        <button onclick="addRule();" class="btn btn-primary">Add Rule</button>
                      </div>
                      <div class="col-sm-2">
                        <button onclick="restoreLocals();" class="btn btn-xs btn-warning"><span class="badge" data-model="localRuleCount">0</span> Restore Local Rules</button>
                      </div>
                    </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>


      <div class="container-fluid">
        <table class="table table-bordered table-condensed table-striped">
          <thead><tr><th>Method</th><th>URL</th><th>Request Body</th><th>Status</th><th>Response Body</th></tr></thead>
          <tbody id="requests"></tbody>
          <tfoot><tr><th>Method</th><th>URL</th><th>Request Body</th><th>Status</th><th>Response Body</th></tr></tfoot>
        </table>
      </div>
  </body>
</html>